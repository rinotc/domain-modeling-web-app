package dev.tchiba.sdmt.core

/**
 * DDDにおけるドメインサービスを示すマーカートレイト
 *
 * <figure>
 * <blockquote>
 * <p>
 * ドメインから生まれる概念の中には、オブジェクトとしてモデル化すると不自然なものもある。
 * こうしたドメインで必要な機能をエンティティや値オブジェクトの責務として押し付けると、モデルに基づくオブジェクトの定義を歪めるか、
 * 意味のない不自然なオブジェクトを追加することになる。
 * </p>
 * ...(中略)
 * <p>
 * サービスは、実体よりも活動、つまり名詞よりも動詞にちなんで命名される傾向がある。サービスもやはり抽象的で意図的な定義
 * を持つことはできるのであり、オブジェクトの定義とは少し趣が異なるだけだ。また、定義された責務を負う必要もあり、その責務と、
 * 責務を満たすためのインタフェースはドメインモデルの一部として定義すべきである。操作名はユキビタス言語に由来しなければならない。
 * 引数と結果はドメインオブジェクトであるべきだ。
 * </p>
 * ...(中略)
 * <p>
 * 優れたサービスには3つの特徴がある。
 * <ol>
 * <li>操作がドメインの概念に関係しており、その概念がエンティティや値オブジェクトの自然な一部ではない。</li>
 * <li>ドメインモデルの他の要素の観点からインターフェースが定義されている。</li>
 * <li>操作に状態がない。</li>
 * </ol>
 * ここで状態がないというのは、どのクライアントでも、特定のサービスの任意のインスタンスを使うにあたって、インスタンスの持つ
 * 個々の履歴を気にする必要なない、という意味である。
 * </p>
 * <p>
 * <strong>
 * ドメインにおける重要なプロセスや変換処理が、エンティティや値オブジェクトの自然な責務ではない場合、その操作は、サービスとして
 * 宣言される独立したインタフェースとしてモデルに追加すること。モデルの言語を用いてインタフェースを定義し、操作名が必ずユキビタス言語
 * の一部になるようにすること。サービスには状態を持たせないこと。
 * </strong>
 * </p>
 * </blockquote>
 * <figcaption>Eric Evans, <cite>エリック・エヴァンスのドメイン駆動設計 サービス</cite></figcaption>
 * </figure>
 */
trait DomainService
